services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - inter-service-network
    # volumes:
    #   - mongodb_data:/data/db
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - inter-service-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s


  herodha_client:
    build:
      context: ./Client
    ports:
      - "3006:3006"
    networks:
      - inter-service-network
    depends_on:
      - mongo
  
  herodha_admin:
    build: 
      context: ./HerodhaAdmin
    ports:
      - "3003:3003"
    volumes:
      - ./config:/app/config
      - ./model:/app/model
    networks:
      - inter-service-network
    depends_on:
      - mongo

  herodha_auth:
    build:
      context: ./HerodhaAuth
    ports:
      - "3000:3000"
    volumes:
      - ./config:/app/config
      - ./model:/app/model
    networks:
      - inter-service-network
    depends_on:
      - mongo

  herodha_stockwallet:
    build:
      context: ./HerodhaStockWallet
    ports:
      - "3002:3002"
    volumes:
      - ./config:/app/config
      - ./model:/app/model
    networks:
      - inter-service-network
    depends_on:
      - mongo

  herodha_trade:
    build:
      context: ./HerodhaTrade
    ports:
      - "3001:3001"
    volumes:
      - ./config:/app/config
      - ./model:/app/model
    networks:
      - inter-service-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started

  matching_engine:
    build:
      context: ./MatchingEngine
    ports:
      - "3004:3004"
    volumes:
      - ./config:/app/config
      - ./model:/app/model
    networks:
      - inter-service-network
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started

  nginx:
    build:
      context: ./nginx
    ports:
      - "8080:8080"
    depends_on:
      - herodha_admin
      - herodha_auth
      - herodha_stockwallet
      - herodha_trade
      - herodha_client
      - matching_engine
      
    networks:
      - inter-service-network

networks:
  inter-service-network:
    driver: bridge

volumes:
  mongodb_data: